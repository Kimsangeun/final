<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="adminMapper">
	<select id="screenList" resultType="timeVo" parameterType="timeVo">
		 <!-- select * from screeninfo -->
		 select screeninfo.* ,movie.title from screeninfo,movie
		<include refid="whereDate"/>
		
		order by screeninfo.mID,screeninfo.scNum,screeninfo.mstart
	</select>
	
	<sql id="whereDate">
		<where>	
			<choose>
				<when test="mstart!=null">
					TO_CHAR(mstart, 'yyyy-MM-dd') = #{showdate} and screeninfo.mID = movie.mID
				</when>
				<otherwise>
					trunc(mstart) = trunc(sysdate) and screeninfo.mID = movie.mID
				</otherwise>	
			</choose>
		</where>
	</sql>
	
	
	<sql id="whereInfo">
		<where>	
			<choose>
				<when test="showtime!=null and showtime!=''">
					TO_CHAR(mstart, 'yyyy-MM-dd HH:mi') = #{showtime} 
					and mID = #{mID}
				</when>
			</choose>
		</where>
	</sql>
	
	<!-- 지정한 날 상영가능한 영화 불러오기 -->
	<select id="selectDayMovieList" parameterType="timeVo" resultType="movieVo" >
		select * from movie <include refid="whereSelectDay"/>
	</select>
	
	<sql id="whereSelectDay">
		<where>	
			<choose>
				<when test="showdate!=null and showdate!=''">
					<![CDATA[release <= TO_DATE(#{showdate},'yyyy-MM-dd')]]>
				</when>
				<otherwise>
					<![CDATA[release <= sysdate]]>
				</otherwise>
			</choose>

		</where>
	</sql>
	
	<select id="movieList" resultType="movieVo" >
		select * from movie
	</select>
	
	<select id="getScreen" resultType="screenVo" >
		select * from cinema
	</select>
	
	<select id="insertCinema" parameterType="timeVo"  >
		insert into screeninfo(
		sID,scNum,mstart,mID) 
		values(	SCREEN_SID.NEXTVAL,	#{scNum}, 
		TO_TIMESTAMP(#{showtime},'yyyy-MM-dd hh24:mi'),#{mID})
	</select>

	
	<!-- 시간중복체크 -->

	<sql id="runtime">
		(select runtime from movie where mid=screeninfo.mID)
	</sql>
	
	<sql id="mytime">
		(select runtime from movie where mid=#{mID})
	</sql>

	<sql id="ggg">
		<where>	
			TO_TIMESTAMP(#{showtime},'yyyy-MM-dd hh24:mi')
			BETWEEN CAST(mstart as DATE ) 
			AND CAST(mstart+(<include refid="runtime"/>+20)/(24*60) as DATE ) 
			and SCNUM = #{scNum}
		</where>
	</sql>
	
	<!-- 1. 같은시간, 모든영화관, 같은영화 //상영관 상관없이 같은시간에 시작하는지 그럼 같은시간 같은관 다른영화도 찾아보고 막아야한다.(->screenChk)-->
	<select id="timeChk" resultType="timeVo" parameterType="timeVo">
		 select * from screeninfo where TO_CHAR(mstart, 'yyyy-MM-dd hh24:mi') = #{showtime} and mID = #{mID}
	</select>
	
	<!-- 2. 같은시간, 같은상영관, 다른영화 //다음은 상영 시작, 끝시간 사이에 같은관 시간표 삽입 막기(->시간 중복/timeOverlap) -->
	<select id="screenChk" resultType="timeVo" parameterType="timeVo">
		 select * from screeninfo where TO_CHAR(mstart, 'yyyy-MM-dd hh24:mi') = #{showtime} and scNum = #{scNum}
	</select>

	<!-- 3. 기존영화 시작시간 ~ 시작시간+영화런타임+30분 사이의 타임에 영화 삽입 막기 //
	 	다음은 넣으려는 영화의 시작~끝+30 사이에 기존 영화 시작시간이 걸치면 막기(->timeOverlapEnd)-->
	<select id="timeOverlap" resultType="timeVo" parameterType="timeVo" >
		select * from screeninfo
		<include refid="ggg"/>
	</select>
	 	
	<!-- 4. 넣으려는 영화 시작 ~ 같은관, 기존영화 시작시간  ~ 넣으려는 영화 끝 경우  // 아마도 마지막-->
	<select id="timeOverlapEnd" resultType="timeVo" parameterType="timeVo" >
		select * from screeninfo where mstart
			BETWEEN CAST(TO_TIMESTAMP(#{showtime},'yyyy-MM-dd hh24:mi') as DATE ) 
			AND CAST(TO_TIMESTAMP(#{showtime},'yyyy-MM-dd hh24:mi')
			+(<include refid="mytime"/>+20)/(24*60) as DATE ) 
			and SCNUM = #{scNum}
		
	</select>

	<!--                                         -->
	
	<!--  -->
	<!--  -->
	<!--  -->
	<!-- 영화 관련 -->
	
	<insert id="movieInsert" parameterType="movieVo">
      <!--   <selectKey keyProperty="movieid" resultType="java.lang.Integer" order="BEFORE">
            <include refid="maxId"/>
        </selectKey> -->
    
        insert into movie (mid,title,director, actor ,plot ,genre ,
        rating ,nation ,poster,steelcut, release, runtime) 
        values (MOVIE_MID.NEXTVAL, #{title}, #{director},#{actor}, #{plot}, #{genre}, #{grade},
        #{nation}, #{poster},#{steelcut},#{release},#{runtime}) 
    </insert>
    
    <select id="movieDetail" resultType="movieVo" parameterType="movieVo">
        select * from movie where mid = #{mid}
    </select>
    
    <select id="movieDelete" parameterType="movieVo">
        delete from movie where mid = #{mid}
    </select>
	<!--  -->
	
	<!-- 회원 -->
	
	<select id="memList" resultType="memVo">
		 select * from member
	</select>
	
	<!--  -->
	
	<!-- 예매 리스트 -->
	
	<select id="resvList" resultType="resvVo">
		  select reser.*,movie.title,screeninfo.scNum,screeninfo.mstart 
		  from reser,movie,screeninfo 
		  where reser.sid = screeninfo.sid and screeninfo.mid = movie.mid
	</select>
	
	<!--  -->
	
	<!-- 정산 -->
	<select id="yearList" parameterType="settleVo" resultType="settleVo">
		select reser.*,screeninfo.mstart,movie.title from reser,screeninfo ,MOVIE
		where reser.sid = screeninfo.sid and screeninfo.mid = movie.mid
		and to_char(mstart,'YYYY')=#{num} order by screeninfo.mstart
	</select>
	<!-- 영화별 정산  -->
	<select id="movieSettle" parameterType="settleVo" resultType="settleVo">
		select reser.*,screeninfo.mstart,movie.title from reser,screeninfo ,MOVIE
		where reser.sid = screeninfo.sid and screeninfo.mid = movie.mid
		and to_char(mstart,'YYYY')=#{num} order by screeninfo.mstart
	</select>
	<!-- 날짜조회  -->
	<select id="dateSettle" parameterType="settleVo" resultType="settleVo">
		select reser.*,screeninfo.mstart,movie.title from reser,screeninfo,MOVIE 
		where reser.sid = screeninfo.sid and screeninfo.mid = movie.mid
		and screeninfo.mstart between (to_date(#{start},'MM/dd/yy'))
		 and (to_date(#{end},'MM/dd/yy')) order by screeninfo.mstart
	</select>
	<!--  -->
	
	<!-- 빡스오피수 & 영화정보-->
	<select id="boxoffice" resultType="movieVo">
		SELECT A.*, Round(nvl(B.bb/C.cc*100,0),2) as bookingRate
		FROM (SELECT * FROM MOVIE) A,
		      (select mid,count(*) as bb from reser group by mid having count(*) >= 0) B,
		      (select count(*)as cc from reser) C
		WHERE A.mid = b.mid(+)
	</select>
	<select id="nowShowing" resultType="movieVo">
		select * from movie where <![CDATA[release <= sysdate]]>
	</select>
	<select id="comingSoon" resultType="movieVo">
		select * from movie where <![CDATA[release > sysdate]]>
	</select>
	
	<!--  -->
	
	<!-- 리뷰 -->
		<!-- 리뷰가져오기 -->
	<select id="review" parameterType="movieVo" resultType="reviewVo">
		SELECT * from review where mid = #{mid} 
	</select>
	
		<!-- 리뷰등록 -->
	<insert id="reviewInsert" parameterType="reviewVo">
		insert into review (mid,id,reg_date,score,review) 
        values (#{mid},#{mid},sysdate,#{score},#{review}) 
	</insert>
	<!--  -->
	
	<!-- 이벤트(공지사항)게시판 메인화면에 걸을 게시물 가져오기  -->
	<select id="event" resultType="boardVo">
		select * from (select * from board order by regdate desc ) 
		where kind ='notice' and <![CDATA[rownum<=4]]>
	</select>
	<!--  -->
</mapper>